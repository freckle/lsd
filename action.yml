name: stack-lint-extra-deps
description: Install and run stack-lint-extra-deps

inputs:
  version:
    description: Version of the tool to install. Default is latest.
    required: false
  arguments:
    description: Arguments to pass. Must be shell-escaped. Default is none.
    required: false
  executable:
    description: Name of stack-lint-extra-deps executable
    required: false
    default: stack-lint-extra-deps
  no-install:
    description: |
      Skip installing the tool. Instead, the executable will be expected
      to be installed and on PATH already.
    required: false
    default: false
  github-token:
    description: |
      GitHub token for authenticating with GitHub API (to determine release
      version). Authentication is not required, but can help avoid rate-limit
      errors.
    default: ${{ github.token }}

outputs: {}

runs:
  using: composite
  steps:
    - id: prep
      if: ${{ inputs.no-install != 'true' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        version=${{ inputs.version }}

        if [[ -z "$version" ]]; then
          read -r version < <(
            curl \
              --silent \
              --show-error \
              --fail-with-body \
              --header "authentication: token $GITHUB_TOKEN }}" \
              https://api.github.com/repos/freckle/stack-lint-extra-deps/releases |
              tee /dev/stderr |
              jq '.[] | select(.draft|not) | select(.prerelease|not) | .tag_name' --raw-output |
              head -n 1
          )
        fi

        echo "Installing stack-lint-extra-deps $version"
        echo "version=$version" >> "$GITHUB_OUTPUT"

    - if: ${{ inputs.no-install != 'true' }}
      uses: pbrisbin/setup-tool-action@v2
      with:
        name: stack-lint-extra-deps
        version: ${{ steps.prep.outputs.version }}
        url: "https://github.com/freckle/{name}/releases/download/{version}/{name}-{arch}-{os}.{ext}"
        subdir: "{name}"
        os-darwin: osx
        arch-x64: x86_64

    - shell: bash
      run: |
        ${{inputs.executable}} ${{ inputs.arguments }}
      env:
        LOG_COLOR: always
        LOG_CONCURRENCY: 1
