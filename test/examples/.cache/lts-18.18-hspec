<!doctype html><!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]--><!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]--><!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="en"> <!--<![endif]--><head><meta charset="UTF-8"><link href="//fonts.googleapis.com/css?family=Lato:400,700" rel="stylesheet" type="text/css"><link rel="search" type="application/opensearchdescription+xml" title="Stackage.org hoogle" href="/static/opensearchhoogle.xml"><link rel="search" type="application/opensearchdescription+xml" title="Stackage.org package page" href="/static/opensearchpackage.xml"><title>hspec :: Stackage Server</title><meta name="og:site_name" content="Stackage"><meta name="twitter:card" content="summary"><meta name="og:title" content="hspec"><meta name="viewport" content="width=device-width,initial-scale=1"><link href="https://www.stackage.org/feed" type="application/atom+xml" rel="alternate" title="Recent Stackage snapshots">
<link rel="stylesheet" href="https://www.stackage.org/static/combined/d9jEluDQ.css"><link rel="stylesheet" href="https://www.stackage.org/static/combined/kYdVr3eT.css"><style>form.hoogle{margin-bottom:20px}form.hoogle .search{width:25em}form.hoogle input{margin-bottom:0}.exact-lookup{display:inline-block;margin-left:1em}.wrap{padding-left:0 !important;padding-right:0 !important;margin-right:0 !important;margin-left:0 !important}h3{color:#777}.table.snapshots{width:auto;margin-left:auto}.version{font-weight:bold}#disqus_thread{margin-top:2em}#upvote{margin-left:-1em}.fa-google-plus-square{color:#dd4b39
}.fa-facebook-square{color:#3b5998
}.fa-twittersquare{color:#0088cc
}.social{border-top:1px solid #ddd;padding-top:0.5em;margin-bottom:0.5em;margin-top:0.5em;border-bottom:1px solid #ddd;padding-bottom:0.5em}.social .fa-thumbs-o-up{color:rgba(0, 39, 59, 0.34902);cursor:pointer}.social .fa-thumbs-o-up:hover{color:#3f4549
  }.social .fa-thumbs-up{cursor:pointer}.dependencies{margin-top:0.5em;padding-top:0.5em}.docs{margin-top:0.5em;border-top:1px solid #ddd;padding-top:0.5em}.docs ul{list-style-type:none}.docs ul li{line-height:1.5em }.docs,.docs ul,.docs li{position:relative}.docs ul{list-style:none;padding-left:10px}.docs li::before,.docs li::after{content:"";position:absolute;left:-12px}.docs li::before{border-top:1px solid #DDD;top:9px;width:8px;height:0}.docs li::after{border-left:1px solid #DDD;height:100%;width:0px;top:0}.docs ul > li:last-child::after{height:9px}.docs > ul > li::after{border-left:none}.docs > ul > li::before{border-top:none}.downloads{margin-left:1em}.fa-plus-square{color:rgba(0, 39, 59, 0.34902);cursor:pointer}.fa-plus-square:hover{color:#3f4549
}@media (max-width: 767px) {.table.snapshots{margin-top:1em;margin-left:-8px}.container{padding-left:15px !important;padding-right:15px !important;margin-right:0 !important;margin-left:0 !important}}.markdown-container{margin-top:1em;border-top:1px solid #ddd;padding-top:1em;margin-bottom:0em;border-bottom:1px solid #ddd;padding-bottom:1em;background:#f4f4f4}.markdown-container h1,.markdown-container h2,.markdown-container h3,.markdown-container h4,.markdown-container h5{color:#333;margin-top:0.5em;margin-bottom:0.5em;font-weight:normal}.markdown-container h2,.markdown-container h3,.markdown-container h4,.markdown-container h5{margin-top:1em}.markdown-container h1{font-size:3em}.markdown-container h2{font-size:2em}.markdown-container h3{font-size:1.5em}.markdown-container h4,.markdown-container h5{font-size:1.2em}.markdown-container ul,.markdown-container ol,.markdown-container p{margin-top:0.5em}.markdown-container ul,.markdown-container ol{padding-left:1em}.markdown-container pre,.markdown-container pre code,.markdown-container code{font-family:ubuntu mono, dejavu sans mono, monospace;background:#f8f8f8}.markdown-container pre{padding:1em}.changelog-container{margin-top:0.5em}.changelog-container h1{font-size:1.2em}.changelog-container h2,.changelog-container h3,.changelog-container h4,.changelog-container h5{font-size:1.2em}h2.changes-title{margin-top:1em;font-size:1.5em;color:#555}.readme-container{margin-top:1em}.hidden{display:none}.expanding{position:relative}.expanding .bottom-gradient{display:none;bottom:0;position:absolute;width:100%;cursor:pointer;height:150px;line-height:150px;text-align:center;background:-moz-linear-gradient(top, rgba(244,244,244,0) 0%, rgba(244,244,244,1) 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(244,244,244,0)), color-stop(100%,rgba(244,244,244,1)));background:-webkit-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:-o-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:-ms-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:linear-gradient(to bottom, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#00f4f4f4', endColorstr='#f4f4f4',GradientType=0 )}.expanding .bottom-gradient:hover .fa{color:#000}.expanding .fa{font-size:5em;color:#666;line-height:150px;margin-top:25px}.expanding.collapsed{height:300px;overflow:hidden}.expanding.collapsed .bottom-gradient{display:block}.likes{margin-right:1em}.no-tags{color:#888}.tag-count{border:0.1em solid #d8d8d8;padding:0 0.25em;border-radius:0.25em;color:#999;font-size:0.8em}.tag-count:hover{border:0.1em solid #333;color:#333;cursor:pointer;text-decoration:none}.tag-count.tagged{background:#06537d;border:none;color:#fff}div.plain-text{white-space:pre-wrap}.deprecated{color:#aaa}.deprecated h1,.deprecated h2,.deprecated h3,.deprecated h4,.deprecated h5,.deprecated a{color:#aaa}.deprecated .package-deprecation-warning{color:red}.deprecated .in-favour-of{color:#333}.deprecated .in-favour-of .in-favour-of-list a{color:#08c}.add-to-nightly{border:1px solid black;padding:0.5em;background:#eef}html{position:relative;min-height:100%}body{background:#f0f0f0;font-family:'Lato', sans-serif;font-size:16px;margin-bottom:4em;padding-bottom:2em}code,pre{color:#555;font-family:"ubuntu mono", monospace}.brand > img{height:20px}.navbar-inverse{margin-bottom:1em}.navbar-inverse .navbar-inner{background:#0981c3}.navbar-inverse .navbar-inner .btn-navbar{background:#0981c3}.navbar-inverse .navbar-inner *{color:#fff !important
}.navbar-inverse .nav .active>a,.navbar-inverse .nav .active>a:hover,.navbar-inverse .nav .active>a:focus{background:#0981c3 !important}.navbar-inner{border-color:#06537d !important}.footer{background:#0981c3;border-top:1px solid #ddd;color:#fff;position:absolute;bottom:0;left:0;width:100%;height:4em;line-height:2em;text-align:center}.footer a{color:#fff;font-weight:bold}.footer .span12{padding:0px 15px 0 0;line-height:4em}.alert{margin-top:1em}h1,h2,h3,h4,h5{color:#06537d
}.content{line-height:30px}</style><!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]--><script>document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/,'js');</script></head><body><div id="main" role="main"><div class="navbar navbar-inverse navbar-static-top"><div class="navbar-inner"><div class="container"><button class="btn btn-navbar" type="button" data-toggle="collapse" data-target=".nav-collapse"><span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="brand" href="/"><img src="/static/img/stackage.png" title="Stackage">
</a>
<div class="nav-collapse collapse"><ul class="nav"><li> <a href="/#about">About</a></li>
<li> <a href="/snapshots">Snapshots</a></li>
<li> <a href="/lts">LTS</a></li>
<li> <a href="/nightly">Nightly</a></li>
<li> <a href="https://github.com/fpco/stackage#frequently-asked-questions">FAQ</a></li>
<li> <a href="/blog">Blog</a></li>
</ul>
</div>
</div>
</div>
</div>
<div class="container"><div class="container content " id="snapshot-home"><div class="row"><div class="span12"><h1>hspec</h1><p class="synopsis">A Testing Framework for Haskell</p><p><a href="http://hspec.github.io/">http://hspec.github.io/</a></p><table><tr><td align="right">Version on this page:</td><td><span class="version">2.7.10</span></td></tr><tr><td align="right"><a href="https://www.stackage.org/lts-18.18">LTS Haskell 18.18</a>:</td><td><span class="version"><a href="https://www.stackage.org/lts-18.18/package/hspec">2.7.10</a></span></td></tr><tr><td align="right"><a href="https://www.stackage.org/nightly-2021-12-16">Stackage Nightly 2021-12-16</a>:</td><td><span class="version"><a href="https://www.stackage.org/nightly-2021-12-16/package/hspec">2.8.5</a></span></td></tr><tr><td align="right">Latest on Hackage:</td><td><a href="https://hackage.haskell.org/package/hspec"><span class="version">2.9.4</span></a></td></tr></table><p><a href="https://www.stackage.org/package/hspec/snapshots">See all snapshots <code>hspec</code> appears in</a></p></div></div><div class="row"><div class="span12"><div class="authorship"><span class="license">MIT licensed </span></div><div class="maintainer">Maintained by <strong class="author"><a href="mailto:sol@typeful.net">Simon Hengel</a></strong></div><div class="pantry-version">This version can be pinned in stack with:<code>hspec-2.7.10@sha256:c9e82c90086acebac576552a06f3cabd249bba048edd1667c7fae0b1313d5bce,1712</code></div><div class="docs"><h4>Module documentation for 2.7.10</h4><form class="hoogle" action="https://www.stackage.org/lts-18.18/hoogle"><input class="search" type="search" autofocus name="q" value="" placeholder="Hoogle Search Phrase">
<input class="btn" type="submit" value="Search">
<input type="hidden" name="package" value="hspec">
<label class="checkbox exact-lookup" for="exact" title="Only find identifiers matching your search term precisely"><input type="checkbox" name="exact" id="exact">
Exact lookup</label>
</form>
<ul class="docs-list"><li>Test<ul class="docs-list"><li><a href="https://www.stackage.org/haddock/lts-18.18/hspec-2.7.10/Test-Hspec.html">Test.Hspec</a>
<ul class="docs-list"><li><a href="https://www.stackage.org/haddock/lts-18.18/hspec-2.7.10/Test-Hspec-Discover.html">Test.Hspec.Discover</a>
</li>
<li><a href="https://www.stackage.org/haddock/lts-18.18/hspec-2.7.10/Test-Hspec-Formatters.html">Test.Hspec.Formatters</a>
</li>
<li><a href="https://www.stackage.org/haddock/lts-18.18/hspec-2.7.10/Test-Hspec-QuickCheck.html">Test.Hspec.QuickCheck</a>
</li>
<li><a href="https://www.stackage.org/haddock/lts-18.18/hspec-2.7.10/Test-Hspec-Runner.html">Test.Hspec.Runner</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div></div></div></div><div class="container content" id="snapshot-home"><div class="row"><div class="span12"><div class="dependencies" id="dependencies">Depends on 5 packages<em>(<a href=https://www.stackage.org/lts-18.18/package/hspec-2.7.10/deps>full list with versions</a>)</em>:</em><div class="dep-list"><a href="https://www.stackage.org/package/base" title="==4.*">base</a>, <a href="https://www.stackage.org/package/hspec-core" title="==2.7.10">hspec-core</a>, <a href="https://www.stackage.org/package/hspec-discover" title="==2.7.10">hspec-discover</a>, <a href="https://www.stackage.org/package/hspec-expectations" title="==0.8.2.*">hspec-expectations</a>, <a href="https://www.stackage.org/package/QuickCheck" title="&gt;=2.12">QuickCheck</a></div></div><div class="reverse-dependencies" id="reverse-dependencies">Used by 32 packages in <b>lts-18.18</b><em>(<a href=https://www.stackage.org/lts-18.18/package/hspec-2.7.10/revdeps>full list with versions</a>)</em>:</em><div class="dep-list"><a href="https://www.stackage.org/package/aern2-mp" title="-any">aern2-mp</a>, <a href="https://www.stackage.org/package/aern2-real" title="-any">aern2-real</a>, <a href="https://www.stackage.org/package/eventful-test-helpers" title="-any">eventful-test-helpers</a>, <a href="https://www.stackage.org/package/fuzzy-dates" title="-any">fuzzy-dates</a>, <a href="https://www.stackage.org/package/genvalidity-hspec" title="-any">genvalidity-hspec</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-aeson" title="-any">genvalidity-hspec-aeson</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-binary" title="-any">genvalidity-hspec-binary</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-cereal" title="-any">genvalidity-hspec-cereal</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-hashable" title="-any">genvalidity-hspec-hashable</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-optics" title="-any">genvalidity-hspec-optics</a>, <a href="https://www.stackage.org/package/genvalidity-hspec-persistent" title="-any">genvalidity-hspec-persistent</a>, <a href="https://www.stackage.org/package/genvalidity-property" title="&gt;=2.1">genvalidity-property</a>, <a href="https://www.stackage.org/package/hgeometry" title="-any">hgeometry</a>, <a href="https://www.stackage.org/package/hledger-web" title="-any">hledger-web</a>, <a href="https://www.stackage.org/package/hspec-checkers" title="-any">hspec-checkers</a>, <a href="https://www.stackage.org/package/hspec-golden-aeson" title="-any">hspec-golden-aeson</a>, <a href="https://www.stackage.org/package/hspec-hedgehog" title="&gt;=2.5.8 &amp;&amp; &lt;3">hspec-hedgehog</a>, <a href="https://www.stackage.org/package/hspec-junit-formatter" title="&gt;=2.7.10">hspec-junit-formatter</a>, <a href="https://www.stackage.org/package/hspec-leancheck" title="&gt;=2.5">hspec-leancheck</a>, <a href="https://www.stackage.org/package/hw-hspec-hedgehog" title="&gt;=2.6 &amp;&amp; &lt;2.8">hw-hspec-hedgehog</a>, <a href="https://www.stackage.org/package/massiv-test" title="-any">massiv-test</a>, <a href="https://www.stackage.org/package/megaparsec-tests" title="&gt;=2.0 &amp;&amp; &lt;3.0">megaparsec-tests</a>, <a href="https://www.stackage.org/package/mixed-types-num" title="&gt;=2.1">mixed-types-num</a>, <a href="https://www.stackage.org/package/mnist-idx-conduit" title="-any">mnist-idx-conduit</a>, <a href="https://www.stackage.org/package/persistent-test" title="&gt;=2.4">persistent-test</a>, <a href="https://www.stackage.org/package/servant-openapi3" title="-any">servant-openapi3</a>, <a href="https://www.stackage.org/package/servant-swagger" title="-any">servant-swagger</a>, <a href="https://www.stackage.org/package/sparse-linear-algebra" title="-any">sparse-linear-algebra</a>, <a href="https://www.stackage.org/package/stack" title="&gt;=2.7.8">stack</a>, <a href="https://www.stackage.org/package/store" title="&gt;=2.1.2">store</a>, <a href="https://www.stackage.org/package/tasty-hspec" title="&gt;=2 &amp;&amp; &lt;2.8">tasty-hspec</a>, <a href="https://www.stackage.org/package/validity-persistent" title="-any">validity-persistent</a></div></div></div></div></div><div class="markdown-container readme-container"><div class="container content"><div class="row"><div class="span12 expanding"><p>Hspec is a testing framework for Haskell.  Some of Hspec&#39;s distinctive
features are:</p><ul><li><p>a friendly DSL for defining tests</p></li><li><p>integration with QuickCheck, SmallCheck, and HUnit</p></li><li><p>parallel test execution</p></li><li><p>automatic discovery of test files</p></li></ul><p>The Hspec Manual is at <a href="http://hspec.github.io/">http://hspec.github.io/</a>.</p><div class="bottom-gradient"><i class="fa fa-angle-down"></i></div></div></div></div></div><div class="container content" id="changes"><div class="row"><div class="span12"><h2 class="changes-title">Changes</h2></div></div></div><div class="markdown-container changelog-container content"><div class="container"><div class="row"><div class="span12 expanding"><h2>Changes in 2.7.10</h2>
<ul>
<li>Add a new formatter (can be used with <code>--format checks</code>)</li>
<li>Add <code>exampleStarted</code> to <code>Formatter</code> API</li>
</ul>
<h2>Changes in 2.7.9</h2>
<ul>
<li>Re-export <code>aroundAll</code> and <code>aroundAllWith</code> in <code>Test.Hspec</code></li>
</ul>
<h2>Changes in 2.7.8</h2>
<ul>
<li>Add <code>aroundAll</code> / <code>aroundAllWith</code> (see #255)</li>
</ul>
<h2>Changes in 2.7.7</h2>
<ul>
<li>Add <code>aroundAll_</code> (see #255)</li>
<li>Correctly handle pending for <code>afterAll</code> actions</li>
</ul>
<h2>Changes in 2.7.6</h2>
<ul>
<li>Add <code>beforeAllWith</code> (see #447)</li>
</ul>
<h2>Changes in 2.7.5</h2>
<ul>
<li>Extract source locations from <code>NoMethodError</code> and <code>AssertionFailed</code></li>
</ul>
<h2>Changes in 2.7.4</h2>
<ul>
<li>Apply <code>--randomize</code> recursively</li>
</ul>
<h2>Changes in 2.7.3</h2>
<ul>
<li>Add <code>--randomize</code></li>
</ul>
<h2>Changes in 2.7.2</h2>
<ul>
<li>Interrupt diff calculation if it takes longer than two seconds (see #415)</li>
</ul>
<h2>Changes in 2.7.1</h2>
<ul>
<li>Add compatibility with QuickCheck 2.13.1 (see #410)</li>
</ul>
<h2>Changes in 2.7.0</h2>
<ul>
<li>Add <code>--focused-only</code> (see #390)</li>
<li>Add <code>--fail-on-focused</code> (see #389)</li>
</ul>
<h2>Changes in 2.6.1</h2>
<ul>
<li>Add <code>Test.Hspec.Runner.runSpec</code> (see #216)</li>
</ul>
<h2>Changes in 2.6.0</h2>
<ul>
<li>Allow to focus individual spec items (see #319)</li>
<li>Do not calculate diff on <code>--no-diff</code> (see #332)</li>
<li>Remove deprecated module Test.Hspec.Core</li>
</ul>
<h2>Changes in 2.5.9</h2>
<ul>
<li>Extract source locations from RecConError (see #375)</li>
</ul>
<h2>Changes in 2.5.8</h2>
<ul>
<li>Add <code>modifyArgs</code> and <code>modifyMaxShrinks</code> to <code>Test.Hspec.QuickCheck</code> (see #380)</li>
</ul>
<h2>Changes in 2.5.7</h2>
<ul>
<li>GHC 8.6.1 related changes</li>
</ul>
<h2>Changes in 2.5.6</h2>
<ul>
<li>Compatibility with <code>QuickCheck-2.12</code></li>
</ul>
<h2>Changes in 2.5.5</h2>
<ul>
<li>Use <code>module[line:column]</code> instead of <code>module:line:column</code> as default label
for <code>describe</code>/<code>it</code> (fixes #366)</li>
</ul>
<h2>Changes in 2.5.4</h2>
<ul>
<li>Show how to rerun individual spec items on test failures (see #205)</li>
</ul>
<h2>Changes in 2.5.3</h2>
<ul>
<li>Treat character escapes like <code>\NUL</code> as single tokens on <code>--diff</code> (see #351)</li>
<li>Allow a <code>/</code> at the beginning and at the end of an absolute path that is
passed to <code>--match</code> or <code>--skip</code></li>
</ul>
<h2>Changes in 2.5.2</h2>
<ul>
<li>Use module:line:column as default label for describe/it (see #250)</li>
<li>Warn if user is affected by <a href="https://ghc.haskell.org/trac/ghc/ticket/13285">https://ghc.haskell.org/trac/ghc/ticket/13285</a> (see #329)</li>
</ul>
<h2>Changes in 2.5.1</h2>
<ul>
<li>Disable tests for Test.Hspec.Core.Timer (see #352)</li>
</ul>
<h2>Changes in 2.5.0</h2>
<ul>
<li>Add <code>sequential</code> (see #311)</li>
<li>Add support for <code>--diff</code> when <code>shouldBe</code> is uesd with
<code>QuickCheck</code>-properties</li>
<li>Add source locations when <code>shouldBe</code> is uesd with <code>QuickCheck</code> properties</li>
<li>Print <code>QuickCheck</code> labels on success (see #297)</li>
<li>Retain output of <code>verbose</code>, <code>label</code>, <code>collect</code>, <code>classify</code>, etc. for
<code>QuickCheck</code> properties (see #257)</li>
<li>Extract source location from error / undefined (see #316)</li>
<li>Parse source locations from pattern match failures</li>
<li>Include source column when formatting source locations</li>
<li>Colorize whitespaces with background color instead of foreground color with
<code>--diff</code></li>
<li>Run <code>Test.Hspec.Core.Formatters.exampleProgress</code> in <code>FormatM</code> instead of
<code>IO</code></li>
<li>Make sure that progress output is always cleared (fixes #301)</li>
<li>Add location information to <code>pending</code> (not used by any formatter yet)</li>
<li>Include duration for each spec item in new formatter API (see #315) (not yet exposed)</li>
<li>Removed deprecated module <code>Test.Hspec.HUnit</code>, use
<code>Test.Hspec.Contrib.HUnit</code> instead</li>
<li>Deprecate <code>--out</code></li>
<li>Remove <code>BestEffort</code> source locations</li>
</ul>
<h2>Changes in 2.4.8</h2>
<ul>
<li>compatibility with GHC 8.4.1-alpha3</li>
</ul>
<h2>Changes in 2.4.7</h2>
<ul>
<li>compatibility with <code>QuickCheck-2.11.3</code> and up (note that <code>QuickCheck</code>
versions <code>2.11</code> to <code>2.11.2</code> are not fully supported)</li>
</ul>
<h2>Changes in 2.4.6</h2>
<ul>
<li>compatibility with the upcoming version <code>4.11.0.0</code> of <code>base</code></li>
</ul>
<h2>Changes in 2.4.5</h2>
<ul>
<li><code>hspec-discover</code>: Sort specs using natural sort order</li>
</ul>
<h2>Changes in 2.4.4</h2>
<ul>
<li>Require quickcheck-io &gt;= 0.2.0</li>
</ul>
<h2>Changes in 2.4.3</h2>
<ul>
<li>Read command-line options from environment variable <code>HSPEC_OPTIONS</code></li>
</ul>
<h2>Changes in 2.4.2</h2>
<ul>
<li>Use <code>--diff</code> by default</li>
<li>Add <code>--failure-report</code> (see #266)</li>
</ul>
<h2>Changes in 2.4.1</h2>
<ul>
<li>Compatibility with HUnit &lt; 1.3</li>
</ul>
<h2>Changes in 2.4.0</h2>
<ul>
<li>Read command-line options from config files <code>~/.hspec</code> and <code>.hspec</code></li>
<li>Add support for <code>--diff</code></li>
<li>Add <code>xit</code>, <code>xspecify</code>, <code>xdescribe</code> and <code>xcontext</code> (see #252)</li>
<li>Add <code>--rerun-all-on-success</code></li>
<li>Report exceptions in <code>beforeAll</code> operations only once</li>
<li>Add indentation when actual/expected contain newlines (see #263)</li>
<li>More graceful shutdown on ctrl-c (see #270)</li>
<li>Run around-hook for Bool and Result (see #252)</li>
<li>Include <code>CHANGES.markdown</code> in package tarball</li>
</ul>
<p>Internal changes:</p>
<ul>
<li>Rename <code>Fail</code> constructor of <code>Result</code>-type to <code>Failure</code></li>
<li>Add <code>FailureReason</code> type</li>
<li>Add <code>Test.Hspec.Core.Spec.safeEvaluateExample</code></li>
</ul>
<h2>Changes in 2.3.2</h2>
<ul>
<li>Compatibility with HUnit 1.5</li>
</ul>
<h2>Changes in 2.3.1</h2>
<ul>
<li>Fix build for HUnit &lt; 1.4</li>
</ul>
<h2>Changes in 2.3.0</h2>
<ul>
<li>Proper support for GHC 8 call stacks</li>
</ul>
<h2>Changes in 2.2.4</h2>
<ul>
<li>Compatibility with QuickCheck-2.9</li>
</ul>
<h2>Changes in 2.2.3</h2>
<ul>
<li>Make sure that <code>cabal haddock</code> works for <code>hspec-discover</code></li>
<li>Forward compatibility for HUnit 1.4</li>
<li>Fix tests for GHC 8.0.1-rc1</li>
</ul>
<h2>Changes in 2.2.2</h2>
<ul>
<li>Fix compilation for GHC 8.0.1-rc1</li>
</ul>
<h2>Changes in 2.2.1</h2>
<ul>
<li>Make sure that Vim’s default <code>errorformat</code> recognizes exact locations</li>
<li>GHCJS compatibility</li>
</ul>
<h2>Changes in 2.2.0</h2>
<ul>
<li>Add source locations to test <code>Result</code></li>
</ul>
<h2>Changes in 2.1.10</h2>
<ul>
<li>GHC 7.0.* compatibility</li>
</ul>
<h2>Changes in 2.1.9</h2>
<ul>
<li>Make use of GHC 7.10.2 source locations</li>
<li>Add <code>--jobs</code></li>
</ul>
<h2>Changes in 2.1.8</h2>
<ul>
<li>Depend on `hspec-expectations-0.7.0”</li>
</ul>
<h2>Changes in 2.1.7</h2>
<ul>
<li>Add <code>beforeAll_</code></li>
</ul>
<h2>Changes in 2.1.6</h2>
<ul>
<li>If there were no previous failures, run all spec items on <code>--rerun</code></li>
</ul>
<h2>Changes in 2.1.5</h2>
<ul>
<li>Compatibility with QuickCheck-2.8</li>
</ul>
<h2>Changes in 2.1.4</h2>
<ul>
<li>Make <code>hspec-discover</code> ignore modules with invalid module names, this fixes
issues with <code>flycheck</code>’s temporary files</li>
</ul>
<h2>Changes in 2.1.3</h2>
<ul>
<li>Format source locations like gcc does</li>
</ul>
<h2>Changes in 2.1.2</h2>
<ul>
<li>Re-export <code>before_</code> from <code>Test.Hspec</code></li>
</ul>
<h2>Changes in 2.1.1</h2>
<ul>
<li>Add <code>before_</code></li>
<li>Add command-line option <code>--skip</code></li>
</ul>
<h2>Changes in 2.1.0</h2>
<ul>
<li>Generalize <code>after_</code>, <code>afterAll_</code> and <code>around_</code></li>
</ul>
<h2>Changes in 2.0.2</h2>
<ul>
<li>Indent error messages for failed examples (fixes #186)</li>
<li>Export <code>defaultParams</code> from <code>Test.Hspec.Core.Example</code></li>
<li>Bring back <code>Test.Hspec.HUnit</code> and deprecate it to provide a smother upgrade
path</li>
</ul>
<h2>Changes in 2.0.1</h2>
<ul>
<li>Add missing extra source files to for <code>hspec-discover</code></li>
</ul>
<h2>Changes in 2.0.0</h2>
<ul>
<li>Split package into <code>hspec</code>, <code>hspec-core</code> and <code>hspec-discover</code></li>
<li>Allow hooks (<code>before</code>, <code>around</code>, etc.) to pass arguments to spec items</li>
<li>Do not print <code>-</code> in front of spec items with <code>specdoc</code> formatter</li>
<li>Move <code>Test.Hspec.HUnit</code> to <code>hspec-contrib</code></li>
</ul>
<h2>Changes in 1.12.4</h2>
<ul>
<li>Add <code>specGroup</code> and <code>specItem</code> to <code>Test.Hspec.Core</code></li>
<li>Deprecate <code>Test.Hspec.Core.it</code> and <code>Test.Hspec.Core.describe</code></li>
</ul>
<h2>Changes in 1.12.3</h2>
<ul>
<li>Make <code>hspec-discover</code> work with <code>-XNoImplicitPrelude</code></li>
</ul>
<h2>Changes in 1.12.2</h2>
<ul>
<li>Include <code>IOErrorType</code> when printing uncaught <code>IOException</code>s (see #204)</li>
</ul>
<h2>Changes in 1.12.1</h2>
<ul>
<li>Add <code>--module-name</code> option to <code>hspec-discover</code> (see #168)</li>
</ul>
<h2>Changes in 1.12.0</h2>
<ul>
<li>Add optional source location to spec items</li>
<li>Move item requirement text from <code>SpecItem</code> constructor to <code>Item</code> data type</li>
<li>Remove <code>BuildSpecs</code> constructor from <code>SpecTree</code>, having <code>runIO</code> this is not
really needed</li>
<li>Add <code>mapSpecTree</code> to <code>Test.Hspec.Core</code></li>
<li>Add <code>afterAll</code> (see #188)</li>
<li>Do not return <code>Result</code> from <code>hspecWith</code> and accept command-line options
(the old behavior is still available as <code>hspecWithResult</code>)</li>
<li>Rename <code>configHandle</code> to <code>configOutputFile</code></li>
<li>Omit empty <code>describe</code> groups from report</li>
<li>Do not pass position to <code>Formatter.exampleGroupStarted</code> (we can not support
this with the upcomming cleanup actions #188)</li>
<li>Do not print empty lines before/after spec groups</li>
<li>Deprecate <code>Test.Hspec.Formatters.newParagraph</code></li>
</ul>
<h2>Changes in 1.11.4</h2>
<ul>
<li>Make test suite independent from QuickCheck seed (see #187)</li>
</ul>
<h2>Changes in 1.11.3</h2>
<ul>
<li>Depend on <code>hspec-expectations-0.6.1</code></li>
</ul>
<h2>Changes in 1.11.2</h2>
<ul>
<li>Add <code>beforeAll</code></li>
</ul>
<h2>Changes in 1.11.1</h2>
<ul>
<li>Add <code>specify</code> as an alias for <code>it</code></li>
</ul>
<h2>Changes in 1.11.0</h2>
<ul>
<li>Add <code>BuildSpecs</code> constructor to internal <code>SpecTree</code> data structure.  This
allows you to do <code>IO</code> while constructing the spec tree.</li>
<li>Add <code>runIO</code></li>
</ul>
<h2>Changes in 1.10.0</h2>
<ul>
<li>Do not use exception type to distinguish between synchronous/asynchronous
exceptions (thanks to Michael Snoyman)</li>
<li>Remove <code>Example</code> instance for <code>Test.HUnit.Test</code> (#101), use
<code>Test.Hspec.HUnit.fromHUnitTest</code> instead.</li>
<li>Do not reexport <code>property</code> from <code>Test.Hspec.QuickCheck</code></li>
<li>Move <code>ProgressCallback</code> out of <code>Params</code></li>
<li>Add show instance for <code>Params</code></li>
<li>Move requirement text from <code>Item</code> to <code>SpecItem</code> constructor</li>
<li>Remove deprecated modules and functions</li>
</ul>
<h2>Changes in 1.9.5</h2>
<ul>
<li>Make sure that ctrl-c works properly with GHC 7.8.* and QuickCheck-2.6</li>
</ul>
<h2>Changes in 1.9.4</h2>
<ul>
<li>Compatibility with transformers-0.4.0.0</li>
</ul>
<h2>Changes in 1.9.3</h2>
<ul>
<li>Make internal Tree data structure more strict (#169)</li>
</ul>
<h2>Changes in 1.9.2</h2>
<ul>
<li>Print type of exceptions that are raised from QuickCheck properties (#94)</li>
</ul>
<h2>Changes in 1.9.1</h2>
<ul>
<li>Bring back compatibility with older versions of QuickCheck (#166)</li>
</ul>
<h2>Changes in 1.9.0</h2>
<ul>
<li>Depend on QuickCheck 2.7</li>
</ul>
<h2>Changes in 1.8.3</h2>
<ul>
<li>Do not use color if <code>TERM=dumb</code> (see #158)</li>
</ul>
<h2>Changes in 1.8.2</h2>
<ul>
<li><code>hspec-discover</code> now accepts <code>--no-main</code> which results in a top-level spec
being generated instead of a test driver (thanks @DanielG)</li>
<li>Make sure that <code>after</code> is run on failing tests (see #159)</li>
</ul>
<h2>Changes in 1.8.1</h2>
<ul>
<li>Add <code>shouldMatchList</code></li>
</ul>
<h2>Changes in 1.8.0</h2>
<ul>
<li>Run <code>before</code>/<code>after</code>/<code>around</code> for each single check of a QuickCheck property</li>
<li>Add <code>Test.Hspec.Core.mapSpecItem</code></li>
<li>Add <code>modifyMaxSuccess</code>, <code>modifyMaxDiscardRatio</code> and <code>modifyMaxSize</code> to
<code>Test.Hspec.QuickCheck</code></li>
<li>Don’t fail if callback is not called in <code>around</code></li>
<li><code>hspec-discover</code>: Remove <code>--nested</code> option</li>
<li><code>hspec-discover</code>: Ignore <code>Spec.hs</code>/<code>Spec.lhs</code></li>
</ul>
<h2>Changes in 1.7.2</h2>
<ul>
<li>Add <code>after</code> and <code>around</code></li>
</ul>
<h2>Changes in 1.7.1</h2>
<ul>
<li>Add <code>shouldContain</code> (thanks to Alfredo Di Napoli)</li>
<li>When printing progress, skip total if it is 0</li>
<li>Do not colorize the description/requirement in failure list</li>
</ul>
<h2>Changes in 1.7.0</h2>
<ul>
<li>Add <code>--depth</code> for use with <code>hspec-smallcheck</code></li>
</ul>
<h2>Change in 1.6.2</h2>
<ul>
<li>Add <code>before</code></li>
<li>Add <code>--qc-max-discard</code> and <code>--qc-max-size</code></li>
</ul>
<h2>Changes in 1.6.1</h2>
<ul>
<li>Allow to specify the output file with <code>--out</code></li>
</ul>
<h2>Changes in 1.6.0</h2>
<ul>
<li>Add support for parallelization</li>
<li>Change license to MIT</li>
<li>Add MonadIO instance for FormatM</li>
<li>Add support for custom formatters to hspec-discover</li>
<li>Add hspecResult</li>
<li>Rename <code>--re-run</code> to <code>--rerun</code> + add documentation (#95)</li>
<li>Remove <code>configVerbose</code></li>
<li>Use same <code>--qc-max-success</code> on <code>--rerun</code> (#125)</li>
<li>Add command-line option <code>--no-color</code>, <code>--color</code> does not accept arguments
anymore (#130)</li>
</ul>
<h2>Changes in 1.5.4</h2>
<ul>
<li>Make sure that QuickCheck is never chatty</li>
<li>Make sure progress for QuickCheck examples is shown</li>
</ul>
<h2>Changes in 1.5.3</h2>
<ul>
<li>Print “Randomized with seed …” only once</li>
</ul>
<h2>Changes in 1.5.2</h2>
<ul>
<li>Add <code>--seed</code>, it can be used to specify the seed for QuickCheck properties</li>
<li>Reuse previous seed on <code>--re-run</code></li>
</ul>
<h2>Changes in 1.5.1</h2>
<ul>
<li>Depend on quickcheck-io</li>
</ul>
<h2>Changes in 1.5.0</h2>
<ul>
<li>Allow to use expectations as QuickCheck properties (#80)</li>
<li>Do not suppress output to <code>stdout</code></li>
<li>Change type of <code>pending</code> to <code>Expectation</code>, add <code>pendingWith</code> (#121)</li>
<li>Add the <code>example</code> function, it fixes the type of an Expectation (#86)</li>
<li>Rename <code>--fast-fail</code> to <code>--fail-fast</code> (for consistency with RSpec)</li>
<li>Do not clutter Cabal test suite logs with QuickCheck output (#112)</li>
<li>Skip redundant output from QuickCheck failure messages (#102)</li>
</ul>
<h2>Changes in 1.4.5</h2>
<ul>
<li>hspec-discover now discovers .lhs files, too</li>
</ul>
<h2>Changes in 1.4.4</h2>
<ul>
<li>Visually distinguish error message from requirements in the summary (#100)</li>
<li>Export <code>formatException</code> from <code>Test.Hspec.Formatters</code></li>
<li>Add <code>--fast-fail</code> (#82)</li>
<li>Print a summary on UserInterrupt/ctrl-c (#107)</li>
</ul>
<h2>Changes in 1.4.3</h2>
<ul>
<li>Add <code>--dry-run</code> (#111)</li>
</ul>
<h2>Changes in 1.4.2</h2>
<ul>
<li>Properly handle ctrl-c while running QuickCheck properties (#93)</li>
<li>Default to <code>--color=always</code> when <code>--color</code> is used without argument (#106)</li>
<li>treat <code>--qc-max-success</code> as an alias for <code>--maximum-generated-tests</code></li>
</ul>
<h2>Changes in 1.4.1</h2>
<ul>
<li>Used CPU time is now only included in the test summary if run with
<code>--print-cpu-time</code>.</li>
</ul>
<h2>Changes in 1.4.0</h2>
<ul>
<li>We now have a manual at <a href="http://hspec.github.io/">http://hspec.github.io/</a>.  The sources are in
<code>doc/</code>.  It’s still work in progress.  Contributions are very welcome!</li>
<li>The Haddock documentation now indicates the stability of each exposed
module.  <code>Test.Hspec</code> is now considered stable.</li>
<li><code>hspec</code> now supports command-line options
<ul>
<li><code>--color</code> can be used to enable/disable colored output</li>
<li><code>--format</code> can be used to pick a specific formatter</li>
<li><code>--html</code> can be used to produce an HTML report</li>
<li><code>--maximum-generated-tests</code> can be used to specify QuickCheck’s
<code>maxSuccess</code></li>
<li><code>--match</code> only runs spec items that match a given string</li>
<li><code>--re-run</code> only runs spec items that previously failed.  This is
undocumented,
experimental and only works within GHCi (use <code>:reload</code> / <code>:main</code>)!</li>
</ul>
</li>
<li>Runner functions exported from <code>Test.Hspec.Runner</code> new expect a monadic
spec.</li>
<li><code>fromHUnitTest</code> has been added.  It can be used to run existing HUnit test
suites with Hspec.</li>
<li>The <code>Example</code> instance for HUnit <code>Test</code>s has been deprecated.
<code>fromHUnitTest</code> can be used instead.  The primary motivation is, that
<code>fromHUnitTest</code> gives more detailed reporting for nested HUnit test suites.</li>
<li><code>Test.Hspec.Monadic</code> has been deprecated, all functionality is available
through one of <code>Test.Hspec</code>, <code>Test.Hspec.Core</code> or <code>Test.Hspec.Runner</code>.</li>
<li>More of Hspec’s internals are now exposed from <code>Test.Hspec.Core</code></li>
<li>All runner functions for the core spec type (aka as non-monadic spec) have
been deprecated, use e.g. <code>Test.Hspec.hspec . fromSpecList</code> instead.  The
motivation is to provide an API that does not expose colliding names.</li>
<li>Some other stuff from <code>Test.Hspec.Core</code> that collides with other parts of
the API has been deprecated.  Compatible alternatives are given in each
deprecation message.</li>
<li>The default formatter now produces less whitespace (#73) + other minor
improvements</li>
<li>The formatter API has been revamped.</li>
<li>The exception type is now printed if an example fails due to an exception
(#50)</li>
<li>The number of pending examples is now printed after each test run (#85)</li>
<li><code>--verbose</code> has been added (#87)</li>
</ul>
<h2>Changes in 1.3.0</h2>
<ul>
<li>
<p><code>Test.Hspec</code> now re-exports the monadic API.  If you still use the
non-monadic API, you can use <code>Test.Hspec.Core</code> as a drop-in replacement.</p>
</li>
<li>
<p><code>hspec-expectations</code>, a set of combinators that allow to express
expectations about the outcome of code examples, is now included with Hspec.
Have a look at the [README of <code>hspec-expectations</code>]
(<a href="https://github.com/sol/hspec-expectations#readme">https://github.com/sol/hspec-expectations#readme</a>)
for a short introduction.</p>
</li>
<li>
<p><code>hspec-discover</code>, a mechanism for automatic spec discovery, is now an
official part of Hspec.
Have a look at [<code>hspec-discover</code>’s README]
(<a href="https://github.com/hspec/hspec/tree/main/hspec-discover#readme">https://github.com/hspec/hspec/tree/main/hspec-discover#readme</a>)
for a short introduction.</p>
</li>
</ul>
<h2>Changes in 1.2.0</h2>
<ul>
<li>
<p><code>hspec</code> has been removed, and <code>hspecX</code> has been renamed to <code>hspec</code> (see
<a href="https://github.com/hspec/hspec/issues/71">#71</a>)</p>
</li>
<li>
<p><code>hHspec</code> now returns a summary of the test run.</p>
</li>
<li>
<p>The time reporting after a test run is not colored anymore.</p>
</li>
</ul>
<h2>Changes in 1.1.3</h2>
<ul>
<li>
<p><code>Test.Hspec</code> warns now about future changes: It will re-export
<code>Test.Hspec.Monadic</code> in the future.  If you still use the non-monadic API,
you can either use <code>Test.Hspec.Core</code> as a drop-in replacement, or migrate your
code to the monadic API.</p>
<p>The monadic API is more stable and easier to use.  Now is a good time to
switch!</p>
</li>
<li>
<p><code>Test.Hspec.Core</code> is now a proper superset of <code>Test.Hspec</code></p>
</li>
</ul>
<h2>Changes in 1.1.2</h2>
<ul>
<li>
<p>All descriptions of nested examples are now included in summary for failing
examples</p>
</li>
<li>
<p><code>context</code> is now an alias for <code>describe</code></p>
</li>
</ul>
<h2>Changes in 1.1.1</h2>
<ul>
<li>Specs from Test.Hspec.Monadic has been renamed to Spec.  For backward
compatibility Specs is still kept as an alias.</li>
</ul>
<h2>Changes in 1.1.0</h2>
<h3>The reason for pending examples is now optional</h3>
<p>With this change, both of the following code snippets work.</p>
<pre><code class="language-haskell">it &quot;some behavior&quot; $
  pending  -- no reason given
</code></pre>
<pre><code class="language-haskell">it &quot;some other behavior&quot; $
  pending &quot;some reason&quot;
</code></pre>
<h3>Hspec does not rely on ExistentialQuantification anymore</h3>
<h3>The type used to represent specs is now abstract</h3>
<p>This should give more useful error messages when adapting old specs that use
the non-monadic API for <code>hspec-1.0</code>/<code>hspec-1.1</code>.</p>
<h3>Several internal types and functions have been deprecated</h3>
<p>Those are internal functions, and they will be removed/hidden with the next
release.  If you use any of those, update your code.  If you really need them,
<a href="https://github.com/hspec/hspec/issues">open a ticket</a> and describe your use
case.</p>
<h2>Changes in 1.0.0</h2>
<h3>Hspec now re-uses QuickCheck’s property function</h3>
<p><code>Test.Hspec.QuickCheck.property</code> is now simply a re-exports of
<code>Test.QuickCheck.property</code>.  This has the advantage that you do not get a name
collision if you import both, <code>Test.Hspec.QuickCheck</code> and <code>Test.QuickCheck</code>.</p>
<h3>Better support for nested specs</h3>
<p><em>NOTE: This is a breaking change to the non-monadic API.  The monadic API is
not affected.</em></p>
<p>In some situations parent descriptions for nested specs were not included in
the generated report.  Solving this required a change to the data structure
that is used to represent specs (it was not a proper tree, now it is).</p>
<h4>Updating specs that use the non-monadic API</h4>
<p>The runner functions (<code>hspec</code>, <code>hspecB</code> and <code>hspecX</code>) now take a list of
descriptions.</p>
<p>The following works with <code>hspec-0.9</code>, but not with <code>hspec-1.0</code>.</p>
<pre><code class="language-haskell">main = hspecX $
  describe &quot;reverse&quot; [
    it &quot;reverses a list&quot; $
      reverse [1, 2, 3] == [3, 2, 1],

    it &quot;gives the original list, if applied twice&quot; $ property $
      \xs -&gt; reverse (reverse xs) == (xs :: [Int])
  ]

</code></pre>
<p>For <code>hspec-1.0</code>, you need to wrap it into a list.</p>
<pre><code class="language-haskell">main = hspecX [
    describe &quot;reverse&quot; [
      it &quot;reverses a list&quot; $
        reverse [1, 2, 3] == [3, 2, 1],

      it &quot;gives the original list, if applied twice&quot; $ property $
        \xs -&gt; reverse (reverse xs) == (xs :: [Int])
    ]
  ]
</code></pre>
<p>Specs consisting of several <em>desribes</em>, combined with <code>descriptions</code>, continue
to work unchanged.  But <code>descriptions</code> is now a noop, and it will be removed in
a future release.  So it is a good idea to drop it.</p>
<p>The following works with both <code>hspec-0.9</code> and <code>hspec-1.0</code>.</p>
<pre><code class="language-haskell">main = hspecX $ descriptions [  -- descriptions is redundant
    describe &quot;Foo&quot; [
      it &quot;has some behavior&quot; True
    ]
  , describe &quot;Bar&quot; [
      it &quot;has some behavior&quot; True
    ]
  ]
</code></pre>
<p>But the following is recommended instead.</p>
<pre><code class="language-haskell">main = hspecX [
    describe &quot;Foo&quot; [
      it &quot;has some behavior&quot; True
    ]
  , describe &quot;Bar&quot; [
      it &quot;has some behavior&quot; True
    ]
  ]
</code></pre>
<h3>A new monadic API for custom Formatters</h3>
<p>For all the details, have a look at the [docs]
(<a href="http://hackage.haskell.org/packages/archive/hspec/latest/doc/html/Test-Hspec-Formatters.html">http://hackage.haskell.org/packages/archive/hspec/latest/doc/html/Test-Hspec-Formatters.html</a>).</p>
<h3>The total time required to run a spec is now included in the summary</h3>
<p>In addition to the used CPU time, the total time required to run a spec is now
include in the summary.  This is useful for specs that do non-CPU-intensive
stuff, or fork subprocesses.</p>
<div class="bottom-gradient"><i class="fa fa-angle-down"></i></div></div></div></div></div></div>
<div class="footer"><div class="container"><div class="row"><div class="span12">A service provided by
<a href="http://www.fpcomplete.com/">FP Complete</a>
</div>
</div>
</div>
</div>
<script src="https://www.stackage.org/static/combined/KkkNZOBL.js"></script><script src="https://www.stackage.org/static/combined/bPfKWATx.js"></script><script>$(function(){
  hljs.initHighlightingOnLoad();

  $('.expanding').each(function(){
    var $this = $(this);
    if ($this.height() > 300) {
      $this.addClass('collapsed');
      $this.find('.bottom-gradient').click(function(){
        $this.removeClass('collapsed');
      });
    }
  });
});
</script></div><!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.  chromium.org/developers/how-tos/chrome-frame-getting-started --><!--[if lt IE 7 ]><script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script><script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script><![endif]--><script async src="https://www.googletagmanager.com/gtag/js?id=UA-36928035-2"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-36928035-2');</script></body></html>