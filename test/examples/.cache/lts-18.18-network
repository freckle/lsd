<!doctype html><!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]--><!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]--><!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="en"> <!--<![endif]--><head><meta charset="UTF-8"><link href="//fonts.googleapis.com/css?family=Lato:400,700" rel="stylesheet" type="text/css"><link rel="search" type="application/opensearchdescription+xml" title="Stackage.org hoogle" href="/static/opensearchhoogle.xml"><link rel="search" type="application/opensearchdescription+xml" title="Stackage.org package page" href="/static/opensearchpackage.xml"><title>network :: Stackage Server</title><meta name="og:site_name" content="Stackage"><meta name="twitter:card" content="summary"><meta name="og:title" content="network"><meta name="viewport" content="width=device-width,initial-scale=1"><link href="https://www.stackage.org/feed" type="application/atom+xml" rel="alternate" title="Recent Stackage snapshots">
<link rel="stylesheet" href="https://www.stackage.org/static/combined/d9jEluDQ.css"><link rel="stylesheet" href="https://www.stackage.org/static/combined/kYdVr3eT.css"><style>form.hoogle{margin-bottom:20px}form.hoogle .search{width:25em}form.hoogle input{margin-bottom:0}.exact-lookup{display:inline-block;margin-left:1em}.wrap{padding-left:0 !important;padding-right:0 !important;margin-right:0 !important;margin-left:0 !important}h3{color:#777}.table.snapshots{width:auto;margin-left:auto}.version{font-weight:bold}#disqus_thread{margin-top:2em}#upvote{margin-left:-1em}.fa-google-plus-square{color:#dd4b39
}.fa-facebook-square{color:#3b5998
}.fa-twittersquare{color:#0088cc
}.social{border-top:1px solid #ddd;padding-top:0.5em;margin-bottom:0.5em;margin-top:0.5em;border-bottom:1px solid #ddd;padding-bottom:0.5em}.social .fa-thumbs-o-up{color:rgba(0, 39, 59, 0.34902);cursor:pointer}.social .fa-thumbs-o-up:hover{color:#3f4549
  }.social .fa-thumbs-up{cursor:pointer}.dependencies{margin-top:0.5em;padding-top:0.5em}.docs{margin-top:0.5em;border-top:1px solid #ddd;padding-top:0.5em}.docs ul{list-style-type:none}.docs ul li{line-height:1.5em }.docs,.docs ul,.docs li{position:relative}.docs ul{list-style:none;padding-left:10px}.docs li::before,.docs li::after{content:"";position:absolute;left:-12px}.docs li::before{border-top:1px solid #DDD;top:9px;width:8px;height:0}.docs li::after{border-left:1px solid #DDD;height:100%;width:0px;top:0}.docs ul > li:last-child::after{height:9px}.docs > ul > li::after{border-left:none}.docs > ul > li::before{border-top:none}.downloads{margin-left:1em}.fa-plus-square{color:rgba(0, 39, 59, 0.34902);cursor:pointer}.fa-plus-square:hover{color:#3f4549
}@media (max-width: 767px) {.table.snapshots{margin-top:1em;margin-left:-8px}.container{padding-left:15px !important;padding-right:15px !important;margin-right:0 !important;margin-left:0 !important}}.markdown-container{margin-top:1em;border-top:1px solid #ddd;padding-top:1em;margin-bottom:0em;border-bottom:1px solid #ddd;padding-bottom:1em;background:#f4f4f4}.markdown-container h1,.markdown-container h2,.markdown-container h3,.markdown-container h4,.markdown-container h5{color:#333;margin-top:0.5em;margin-bottom:0.5em;font-weight:normal}.markdown-container h2,.markdown-container h3,.markdown-container h4,.markdown-container h5{margin-top:1em}.markdown-container h1{font-size:3em}.markdown-container h2{font-size:2em}.markdown-container h3{font-size:1.5em}.markdown-container h4,.markdown-container h5{font-size:1.2em}.markdown-container ul,.markdown-container ol,.markdown-container p{margin-top:0.5em}.markdown-container ul,.markdown-container ol{padding-left:1em}.markdown-container pre,.markdown-container pre code,.markdown-container code{font-family:ubuntu mono, dejavu sans mono, monospace;background:#f8f8f8}.markdown-container pre{padding:1em}.changelog-container{margin-top:0.5em}.changelog-container h1{font-size:1.2em}.changelog-container h2,.changelog-container h3,.changelog-container h4,.changelog-container h5{font-size:1.2em}h2.changes-title{margin-top:1em;font-size:1.5em;color:#555}.readme-container{margin-top:1em}.hidden{display:none}.expanding{position:relative}.expanding .bottom-gradient{display:none;bottom:0;position:absolute;width:100%;cursor:pointer;height:150px;line-height:150px;text-align:center;background:-moz-linear-gradient(top, rgba(244,244,244,0) 0%, rgba(244,244,244,1) 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(244,244,244,0)), color-stop(100%,rgba(244,244,244,1)));background:-webkit-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:-o-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:-ms-linear-gradient(top, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);background:linear-gradient(to bottom, rgba(244,244,244,0) 0%,rgba(244,244,244,1) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#00f4f4f4', endColorstr='#f4f4f4',GradientType=0 )}.expanding .bottom-gradient:hover .fa{color:#000}.expanding .fa{font-size:5em;color:#666;line-height:150px;margin-top:25px}.expanding.collapsed{height:300px;overflow:hidden}.expanding.collapsed .bottom-gradient{display:block}.likes{margin-right:1em}.no-tags{color:#888}.tag-count{border:0.1em solid #d8d8d8;padding:0 0.25em;border-radius:0.25em;color:#999;font-size:0.8em}.tag-count:hover{border:0.1em solid #333;color:#333;cursor:pointer;text-decoration:none}.tag-count.tagged{background:#06537d;border:none;color:#fff}div.plain-text{white-space:pre-wrap}.deprecated{color:#aaa}.deprecated h1,.deprecated h2,.deprecated h3,.deprecated h4,.deprecated h5,.deprecated a{color:#aaa}.deprecated .package-deprecation-warning{color:red}.deprecated .in-favour-of{color:#333}.deprecated .in-favour-of .in-favour-of-list a{color:#08c}.add-to-nightly{border:1px solid black;padding:0.5em;background:#eef}html{position:relative;min-height:100%}body{background:#f0f0f0;font-family:'Lato', sans-serif;font-size:16px;margin-bottom:4em;padding-bottom:2em}code,pre{color:#555;font-family:"ubuntu mono", monospace}.brand > img{height:20px}.navbar-inverse{margin-bottom:1em}.navbar-inverse .navbar-inner{background:#0981c3}.navbar-inverse .navbar-inner .btn-navbar{background:#0981c3}.navbar-inverse .navbar-inner *{color:#fff !important
}.navbar-inverse .nav .active>a,.navbar-inverse .nav .active>a:hover,.navbar-inverse .nav .active>a:focus{background:#0981c3 !important}.navbar-inner{border-color:#06537d !important}.footer{background:#0981c3;border-top:1px solid #ddd;color:#fff;position:absolute;bottom:0;left:0;width:100%;height:4em;line-height:2em;text-align:center}.footer a{color:#fff;font-weight:bold}.footer .span12{padding:0px 15px 0 0;line-height:4em}.alert{margin-top:1em}h1,h2,h3,h4,h5{color:#06537d
}.content{line-height:30px}</style><!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]--><script>document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/,'js');</script></head><body><div id="main" role="main"><div class="navbar navbar-inverse navbar-static-top"><div class="navbar-inner"><div class="container"><button class="btn btn-navbar" type="button" data-toggle="collapse" data-target=".nav-collapse"><span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="brand" href="/"><img src="/static/img/stackage.png" title="Stackage">
</a>
<div class="nav-collapse collapse"><ul class="nav"><li> <a href="/#about">About</a></li>
<li> <a href="/snapshots">Snapshots</a></li>
<li> <a href="/lts">LTS</a></li>
<li> <a href="/nightly">Nightly</a></li>
<li> <a href="https://github.com/fpco/stackage#frequently-asked-questions">FAQ</a></li>
<li> <a href="/blog">Blog</a></li>
</ul>
</div>
</div>
</div>
</div>
<div class="container"><div class="container content " id="snapshot-home"><div class="row"><div class="span12"><h1>network</h1><p class="synopsis">Low-level networking interface</p><p><a href="https://github.com/haskell/network">https://github.com/haskell/network</a></p><table><tr><td align="right">Version on this page:</td><td><span class="version">3.1.1.1</span></td></tr><tr><td align="right"><a href="https://www.stackage.org/lts-18.18">LTS Haskell 18.18</a>:</td><td><span class="version"><a href="https://www.stackage.org/lts-18.18/package/network">3.1.1.1</a></span></td></tr><tr><td align="right"><a href="https://www.stackage.org/nightly-2021-12-16">Stackage Nightly 2021-12-16</a>:</td><td><span class="version"><a href="https://www.stackage.org/nightly-2021-12-16/package/network">3.1.2.5</a></span></td></tr><tr><td align="right">Latest on Hackage:</td><td><a href="https://hackage.haskell.org/package/network"><span class="version">3.1.2.5</span></a></td></tr></table><p><a href="https://www.stackage.org/package/network/snapshots">See all snapshots <code>network</code> appears in</a></p></div></div><div class="row"><div class="span12"><div class="authorship"><span class="license">BSD-3-Clause licensed </span></div><div class="maintainer">Maintained by <strong class="author">Kazu Yamamoto, Evan Borden</strong></div><div class="pantry-version">This version can be pinned in stack with:<code>network-3.1.1.1@sha256:b704cb6676c03e98267190df797497587576a2e96094550ea143415239bbe66e,4268</code></div><div class="docs"><h4>Module documentation for 3.1.1.1</h4><form class="hoogle" action="https://www.stackage.org/lts-18.18/hoogle"><input class="search" type="search" autofocus name="q" value="" placeholder="Hoogle Search Phrase">
<input class="btn" type="submit" value="Search">
<input type="hidden" name="package" value="network">
<label class="checkbox exact-lookup" for="exact" title="Only find identifiers matching your search term precisely"><input type="checkbox" name="exact" id="exact">
Exact lookup</label>
</form>
<ul class="docs-list"><li>Network<ul class="docs-list"><li><a href="https://www.stackage.org/haddock/lts-18.18/network-3.1.1.1/Network-Socket.html">Network.Socket</a>
<ul class="docs-list"><li><a href="https://www.stackage.org/haddock/lts-18.18/network-3.1.1.1/Network-Socket-Address.html">Network.Socket.Address</a>
</li>
<li><a href="https://www.stackage.org/haddock/lts-18.18/network-3.1.1.1/Network-Socket-ByteString.html">Network.Socket.ByteString</a>
<ul class="docs-list"><li><a href="https://www.stackage.org/haddock/lts-18.18/network-3.1.1.1/Network-Socket-ByteString-Lazy.html">Network.Socket.ByteString.Lazy</a>
</li>
</ul>
</li>
<li><a href="https://www.stackage.org/haddock/lts-18.18/network-3.1.1.1/Network-Socket-Internal.html">Network.Socket.Internal</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div></div></div></div><div class="container content" id="snapshot-home"><div class="row"><div class="span12"><div class="dependencies" id="dependencies">Depends on 3 packages<em>(<a href=https://www.stackage.org/lts-18.18/package/network-3.1.1.1/deps>full list with versions</a>)</em>:</em><div class="dep-list"><a href="https://www.stackage.org/package/base" title="&gt;=4.7 &amp;&amp; &lt;5">base</a>, <a href="https://www.stackage.org/package/bytestring" title="==0.10.*">bytestring</a>, <a href="https://www.stackage.org/package/deepseq" title="-any">deepseq</a></div></div><div class="reverse-dependencies" id="reverse-dependencies">Used by 107 packages in <b>lts-18.18</b><em>(<a href=https://www.stackage.org/lts-18.18/package/network-3.1.1.1/revdeps>full list with versions</a>)</em>:</em><div class="dep-list"><a href="https://www.stackage.org/package/amqp" title="&gt;2.6">amqp</a>, <a href="https://www.stackage.org/package/amqp-utils" title="&gt;2.6">amqp-utils</a>, <a href="https://www.stackage.org/package/atom-basic" title="&gt;=2.6">atom-basic</a>, <a href="https://www.stackage.org/package/aws-xray-client" title="&gt;=3.1.1.1">aws-xray-client</a>, <a href="https://www.stackage.org/package/bugsnag-haskell" title="-any">bugsnag-haskell</a>, <a href="https://www.stackage.org/package/buttplug-hs-core" title="&gt;=3.1.1.1 &amp;&amp; &lt;3.2">buttplug-hs-core</a>, <a href="https://www.stackage.org/package/conduit-extra" title="&gt;=2.3">conduit-extra</a>, <a href="https://www.stackage.org/package/connection" title="&gt;=2.6.3">connection</a>, <a href="https://www.stackage.org/package/connection-pool" title="&gt;=2.2.3">connection-pool</a>, <a href="https://www.stackage.org/package/datadog" title="-any">datadog</a>, <a href="https://www.stackage.org/package/DAV" title="&gt;=2.6.10">DAV</a>, <a href="https://www.stackage.org/package/dbus" title="&gt;=3.0.1.0 &amp;&amp; &lt;3.2">dbus</a>, <a href="https://www.stackage.org/package/dns" title="&gt;=2.3">dns</a>, <a href="https://www.stackage.org/package/ekg" title="&lt;3.2">ekg</a>, <a href="https://www.stackage.org/package/ekg-statsd" title="&lt;3.2">ekg-statsd</a>, <a href="https://www.stackage.org/package/faktory" title="&gt;=3.1.1.1">faktory</a>, <a href="https://www.stackage.org/package/flags-applicative" title="&gt;=2.8">flags-applicative</a>, <a href="https://www.stackage.org/package/ftp-client" title="&gt;=2.6.3.6 &amp;&amp; &lt;3.2">ftp-client</a>, <a href="https://www.stackage.org/package/gopher-proxy" title="-any">gopher-proxy</a>, <a href="https://www.stackage.org/package/hackage-security" title="&gt;=2.6 &amp;&amp; &lt;2.9 || &gt;=3.0 &amp;&amp; &lt;3.2">hackage-security</a>, <a href="https://www.stackage.org/package/HandsomeSoup" title="&gt;=2.6">HandsomeSoup</a>, <a href="https://www.stackage.org/package/happstack-server" title="&gt;=3.0.0 &amp;&amp; &lt;3.2">happstack-server</a>, <a href="https://www.stackage.org/package/hasbolt" title="&gt;=2.6.3.1 &amp;&amp; &lt;3.2">hasbolt</a>, <a href="https://www.stackage.org/package/HaskellNet" title="&gt;=2.7 &amp;&amp; &lt;3.2">HaskellNet</a>, <a href="https://www.stackage.org/package/haxr" title="&gt;=2.6 &amp;&amp; &lt;3.2">haxr</a>, <a href="https://www.stackage.org/package/hedis" title="&gt;=2 &amp;&amp; &lt;3.2">hedis</a>, <a href="https://www.stackage.org/package/hledger-web" title="-any">hledger-web</a>, <a href="https://www.stackage.org/package/hosc" title="&gt;=2.3">hosc</a>, <a href="https://www.stackage.org/package/hsdns" title="&gt;=2.6.3.0">hsdns</a>, <a href="https://www.stackage.org/package/hslogger" title="&gt;=3.0 &amp;&amp; &lt;3.2">hslogger</a>, <a href="https://www.stackage.org/package/HsOpenSSL" title="&gt;=2.1 &amp;&amp; &lt;3.2">HsOpenSSL</a>, <a href="https://www.stackage.org/package/HTTP" title="&gt;=2.6 &amp;&amp; &lt;3.2">HTTP</a>, <a href="https://www.stackage.org/package/http2" title="-any">http2</a>, <a href="https://www.stackage.org/package/http-client" title="&gt;=2.6">http-client</a>, <a href="https://www.stackage.org/package/http-client-openssl" title="-any">http-client-openssl</a>, <a href="https://www.stackage.org/package/http-client-tls" title="&gt;=2.6">http-client-tls</a>, <a href="https://www.stackage.org/package/http-common" title="-any">http-common</a>, <a href="https://www.stackage.org/package/httpd-shed" title="&gt;=2.7 &amp;&amp; &lt;3.2">httpd-shed</a>, <a href="https://www.stackage.org/package/http-reverse-proxy" title="-any">http-reverse-proxy</a>, <a href="https://www.stackage.org/package/http-streams" title="&gt;=2.6">http-streams</a>, <em>and many more</em></div></div></div></div></div><div class="markdown-container readme-container"><div class="container content"><div class="row"><div class="span12 expanding"><h1><a href="http://hackage.haskell.org/package/network"><code>network</code></a> <a href="https://travis-ci.org/haskell/network"><img src="https://travis-ci.org/haskell/network.svg?branch=master" alt="Build Status" /></a> <a href="https://ci.appveyor.com/project/eborden/network/branch/master"><img src="https://ci.appveyor.com/api/projects/status/5erq63o4m29bhl57/branch/master?svg=true" alt="Build status" /></a></h1>
<p>To build this package directly from git, you must run <code>autoreconf -i</code>.
And then use <code>cabal configure; cabal build</code> or <code>stack build</code>.</p>
<h2>Support Policy</h2>
<h3>GHC</h3>
<p>The <code>network</code> package support <a href="https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/intro.html#ghc-version-numbering-policy">3 major versions of GHC</a> only.
This means that the current stable version and two previous stable versions are supported.</p>
<h3>Windows</h3>
<p>We use MSYS to build this package on Windows.
To use the <code>network</code> package on Cygwin, use <code>stack</code>.</p>
<h2>Coding</h2>
<h3>.hs files</h3>
<p>If you need C macros created by “configure” or <code>CALLCONV</code>/<code>SAFE_ON_WIN</code>, put</p>
<pre><code>#include &quot;HsNetDef.h&quot;
</code></pre>
<p>“HsNet.h” does now work well since Mac’s cpp sucks.</p>
<h3>.hsc files</h3>
<p>If you need <code>#peek</code>, <code>#poke</code> and others, create a <code>.hsc</code> file with</p>
<pre><code>#include &quot;HsNet.h&quot;
</code></pre>
<p><code>HsNet.h</code> includes <code>HsNefDef.h</code> and necessary C structures.
Unfortunately, <code>hsc2hs</code> does not convert C macros.
So, if you use <code>CALLCONV</code>/<code>SAFE_ON_WIN</code>, the following is also necessary:</p>
<pre><code>##include &quot;HsNetDef.h&quot;
</code></pre>
<h2>Milestones</h2>
<h3>2.6</h3>
<ul>
<li>[x] Making <code>SockAddrCan</code> deprecated</li>
</ul>
<h3>2.7</h3>
<p>See <a href="https://github.com/haskell/network/issues/296">https://github.com/haskell/network/issues/296</a></p>
<ul>
<li>[x] Making <code>Network</code> deprecated</li>
<li>[x] Making <code>Network.BSD</code> deprecated</li>
<li>[x] Making <code>MkSocket</code> deprecated</li>
<li>[x] Making many APIs deprecated</li>
</ul>
<h3>2.8</h3>
<ul>
<li>[x] Stop exporting the <code>PortNum</code> Constructor in <code>PortNumber</code></li>
</ul>
<h3>3.0</h3>
<ul>
<li>[x] Removing <code>Network</code></li>
<li>[x] Removing <code>Network.BSD</code></li>
<li>[x] Removing <code>SockAddrCan</code></li>
<li>[x] Changing the internal structure of <code>Socket</code>.</li>
<li>[x] Make address extensible.</li>
<li>[x] Remove EOF errors</li>
</ul>
<div class="bottom-gradient"><i class="fa fa-angle-down"></i></div></div></div></div></div><div class="container content" id="changes"><div class="row"><div class="span12"><h2 class="changes-title">Changes</h2></div></div></div><div class="markdown-container changelog-container content"><div class="container"><div class="row"><div class="span12 expanding"><h2>Version 3.1.1.1</h2>
<ul>
<li>Fix for GHCJS.
<a href="https://github.com/haskell/network/pull/431">#431</a></li>
</ul>
<h2>Version 3.1.1.0</h2>
<ul>
<li>A new API: <code>gracefulClose</code>.
<a href="https://github.com/haskell/network/pull/417">#417</a></li>
<li><code>touchSocket</code>, <code>unsafeFdSocket</code>: Allow direct access to a socket’s file
descriptor while providing tools to prevent it from being garbage collected.
This also deprecated <code>fdSocket</code> in favor of <code>unsafeFdSocket</code> and
<code>withFdSocket</code>.
<a href="https://github.com/haskell/network/pull/423">#423</a></li>
<li><code>socketToFd</code>: Duplicates a socket as a file desriptor and closes the source
socket.
<a href="https://github.com/haskell/network/pull/424">#424</a></li>
</ul>
<h2>Version 3.1.0.1</h2>
<ul>
<li>getAddrInfo: raise exception if no AddrInfo returned.
<a href="https://github.com/haskell/network/pull/410">#410</a></li>
<li>Avoid catching SomeException.
<a href="https://github.com/haskell/network/pull/411">#411</a></li>
</ul>
<h2>Version 3.1.0.0</h2>
<ul>
<li>Making GC of socket safer.
<a href="https://github.com/haskell/network/pull/399">#399</a></li>
<li>Deprecating fdSocket. Use withFdSocket instead to ensure
that sockets are GCed in proper time.
<a href="https://github.com/haskell/network/pull/399">#399</a></li>
</ul>
<h2>Version 3.0.1.1</h2>
<ul>
<li>Fix blocking <code>if_nametoindex</code> errors on Windows
<a href="https://github.com/haskell/network/pull/391">#391</a></li>
</ul>
<h2>Version 3.0.1.0</h2>
<ul>
<li>Added <code>getSocketType :: Socket -&gt; IO SocketType</code>.
<a href="https://github.com/haskell/network/pull/372">#372</a></li>
<li>Correcting manual and brushing up test cases
<a href="https://github.com/haskell/network/pull/375">#375</a></li>
<li>Fixed longstanded bug in <code>getContents</code> on mac
<a href="https://github.com/haskell/network/pull/375">#375</a></li>
<li>Fixing regression: set correct sockaddr length for abstract addresses
for Linux.
<a href="https://github.com/haskell/network/pull/374">#374</a></li>
</ul>
<h2>Version 3.0.0.1</h2>
<ul>
<li>Fixed a bug in <code>connect</code> where exceptions were not thrown
<a href="https://github.com/haskell/network/pull/368">#368</a></li>
</ul>
<h2>Version 3.0.0.0</h2>
<ul>
<li>Breaking change: the Network and Network.BSD are removed.
Network.BSD is provided a new package: network-bsd.</li>
<li>Breaking change: the signatures are changed:</li>
</ul>
<pre><code>old fdSocket :: Socket -&gt; CInt
new fdSocket :: Socket -&gt; IO CInt

old mkSocket :: CInt -&gt; Family -&gt; SocketType -&gt; ProtocolNumber -&gt; SocketStatus -&gt; IO Socket
new mkSocket :: CInt -&gt; IO Socket
</code></pre>
<ul>
<li>Breaking change: the deprecated APIs are removed: send, sendTo, recv, recvFrom, recvLen, htonl, ntohl, inet_addr, int_ntoa, bindSocket, sClose, SocketStatus, isConnected, isBound, isListening, isReadable, isWritable, sIsConnected, sIsBound, sIsListening, sIsReadable, sIsWritable, aNY_PORT, iNADDR_ANY, iN6ADDR_ANY, sOMAXCONN, sOL_SOCKET, sCM_RIGHTS, packSocketType, getPeerCred.</li>
<li>Breaking change: SockAddrCan is removed from SockAddr.</li>
<li>Socket addresses are extendable with Network.Socket.Address.</li>
<li>“socket” is now asynchronous-exception-safe.
<a href="https://github.com/haskell/network/pull/336">#336</a></li>
<li>“recvFrom” returns (0, addr) instead of throwing an error on EOF.
<a href="https://github.com/haskell/network/pull/360">#360</a></li>
<li>All APIs are available on any platforms.</li>
<li>Build system is simplified.</li>
<li>Bug fixes.</li>
</ul>
<h2>Version 2.8.0.1</h2>
<ul>
<li>Eensuring that accept returns a correct sockaddr for unix domain.
<a href="https://github.com/haskell/network/pull/400">#400</a></li>
<li>Avoid out of bounds writes in pokeSockAddr.
<a href="https://github.com/haskell/network/pull/400">#400</a></li>
</ul>
<h2>Version 2.8.0.0</h2>
<ul>
<li>Breaking change: PortNumber originally contained Word16 in network
byte order and used “deriving Ord”. This results in strange behavior
on the Ord instance. Now PortNumber holds Word16 in host byte order.
<a href="https://github.com/haskell/network/pull/347">#347</a></li>
<li>Breaking change: stopping the export of the PortNum constructor in
PortNumber.</li>
<li>Use bytestring == 0.10.* only.</li>
<li>Use base &gt;= 4.7 &amp;&amp; &lt; 5.</li>
</ul>
<h2>Version 2.7.0.2</h2>
<ul>
<li>Removing withMVar to avoid the deadlock between “accept” and “close”
<a href="https://github.com/haskell/network/pull/330">#330</a></li>
<li>“close” does not throw exceptions. A new API: “close’” throws
exceptions when necessary.
<a href="https://github.com/haskell/network/pull/337">#337</a></li>
<li>Fixing the hang of lazy sendAll.
<a href="https://github.com/haskell/network/pull/340">#340</a></li>
<li>Installing NetDef.h (#334)
<a href="https://github.com/haskell/network/pull/334">#334</a></li>
</ul>
<h2>Version 2.7.0.1</h2>
<ul>
<li>A new API: socketPortSafe.
<a href="https://github.com/haskell/network/pull/319">#319</a></li>
<li>Fixing a drain bug of sendAll.
<a href="https://github.com/haskell/network/pull/320">#320</a></li>
<li>Porting the new CALLCONV convention from master.
<a href="https://github.com/haskell/network/pull/313">#313</a></li>
<li>Withdrawing the deprecations of packFamily and unpackFamily.
<a href="https://github.com/haskell/network/pull/324">#324</a></li>
</ul>
<h2>Version 2.7.0.0</h2>
<ul>
<li>Obsoleting the Network module.</li>
<li>Obsoleting the Network.BSD module.</li>
<li>Obsoleting APIs: MkSocket, htonl, ntohl,
getPeerCred, getPeerEid,
send, sendTo, recv, recvFrom, recvLen,
inet_addr, inet_ntoa,
isConnected, isBound, isListening, isReadable, isWritable,
aNY_PORT, iNADDR_ANY, iN6ADDR_ANY, sOMAXCONN,
sOL_SOCKET, sCM_RIGHTS,
packFamily, unpackFamily, packSocketType</li>
<li>Breaking change: do not closeFd within sendFd.
<a href="https://github.com/haskell/network/pull/271">#271</a></li>
<li>Exporting ifNameToIndex and ifIndexToName from Network.Socket.</li>
<li>New APIs: setCloseOnExecIfNeeded, getCloseOnExec and getNonBlock</li>
<li>New APIs: isUnixDomainSocketAvailable and getPeerCredential</li>
<li>socketPair, sendFd and recvFd are exported even on Windows.</li>
</ul>
<h2>Version 2.6.3.5</h2>
<ul>
<li>Reverting “Do not closeFd within sendFd”
<a href="https://github.com/haskell/network/pull/271">#271</a></li>
</ul>
<h2>Version 2.6.3.4</h2>
<ul>
<li>Don’t touch IPv6Only when running on OpenBSD
<a href="https://github.com/haskell/network/pull/227">#227</a></li>
<li>Do not closeFd within sendFd
<a href="https://github.com/haskell/network/pull/271">#271</a></li>
<li>Updating examples and docs.</li>
</ul>
<h2>Version 2.6.3.3</h2>
<ul>
<li>Adds a function to show the defaultHints without reading their undefined fields
<a href="https://github.com/haskell/network/pull/292">#291</a></li>
<li>Improve exception error messages for getAddrInfo and getNameInfo
<a href="https://github.com/haskell/network/pull/289">#289</a></li>
</ul>
<h2>Version 2.6.3.2</h2>
<ul>
<li>
<p>Zero memory of <code>sockaddr_un</code> if abstract socket
<a href="https://github.com/haskell/network/pull/220">#220</a></p>
</li>
<li>
<p>Improving error messages
<a href="https://github.com/haskell/network/pull/232">#232</a></p>
</li>
<li>
<p>Allow non-blocking file descriptors via <code>setNonBlockIfNeeded</code>
<a href="https://github.com/haskell/network/pull/242">#242</a></p>
</li>
<li>
<p>Update config.{guess,sub} to latest version
<a href="https://github.com/haskell/network/pull/244">#244</a></p>
</li>
<li>
<p>Rename <code>my_inet_ntoa</code> to avoid symbol conflicts
<a href="https://github.com/haskell/network/pull/228">#228</a></p>
</li>
<li>
<p>Test infrastructure improvements
<a href="https://github.com/haskell/network/pull/219">#219</a>
<a href="https://github.com/haskell/network/pull/217">#217</a>
<a href="https://github.com/haskell/network/pull/218">#218</a></p>
</li>
<li>
<p>House keeping and cleanup
<a href="https://github.com/haskell/network/pull/238">#238</a>
<a href="https://github.com/haskell/network/pull/237">#237</a></p>
</li>
</ul>
<h2>Version 2.6.3.1</h2>
<ul>
<li>Reverse breaking exception change in <code>Network.Socket.ByteString.recv</code>
<a href="https://github.com/haskell/network/issues/215">#215</a></li>
</ul>
<h2>Version 2.6.3.0</h2>
<ul>
<li>
<p>New maintainers: Evan Borden (@eborden) and Kazu Yamamoto (@kazu-yamamoto).
The maintainer for a long period, Johan Tibell (@tibbe) stepped down.
Thank you, Johan, for your hard work for a long time.</p>
</li>
<li>
<p>New APIs: ntohl, htonl,hostAddressToTuple{,6} and tupleToHostAddress{,6}.
<a href="https://github.com/haskell/network/pull/210">#210</a></p>
</li>
<li>
<p>Added a Read instance for PortNumber. <a href="https://github.com/haskell/network/pull/145">#145</a></p>
</li>
<li>
<p>We only set the IPV6_V6ONLY flag to 0 for stream and datagram socket types,
as opposed to all of them. This makes it possible to use ICMPv6.
<a href="https://github.com/haskell/network/pull/180">#180</a>
<a href="https://github.com/haskell/network/pull/181">#181</a></p>
</li>
<li>
<p>Work around GHC bug #12020. Socket errors no longer cause segfaults or
hangs on Windows. <a href="https://github.com/haskell/network/pull/192">#192</a></p>
</li>
<li>
<p>Various documentation improvements and the deprecated pragmas.
<a href="https://github.com/haskell/network/pull/186">#186</a>
<a href="https://github.com/haskell/network/issues/201">#201</a>
<a href="https://github.com/haskell/network/pull/205">#205</a>
<a href="https://github.com/haskell/network/pull/206">#206</a>
<a href="https://github.com/haskell/network/issues/211">#211</a></p>
</li>
<li>
<p>Various internal improvements.
<a href="https://github.com/haskell/network/pull/193">#193</a>
<a href="https://github.com/haskell/network/pull/200">#200</a></p>
</li>
</ul>
<h2>Version 2.6.2.1</h2>
<ul>
<li>
<p>Regenerate configure and <code>HsNetworkConfig.h.in</code>.</p>
</li>
<li>
<p>Better detection of CAN sockets.</p>
</li>
</ul>
<h2>Version 2.6.2.0</h2>
<ul>
<li>
<p>Add support for <code>TCP_USER_TIMEOUT</code>.</p>
</li>
<li>
<p>Don’t conditionally export the <code>SockAddr</code> constructors.</p>
</li>
<li>
<p>Add <code>isSupportSockAddr</code> to allow checking for supported address types
at runtime.</p>
</li>
</ul>
<div class="bottom-gradient"><i class="fa fa-angle-down"></i></div></div></div></div></div></div>
<div class="footer"><div class="container"><div class="row"><div class="span12">A service provided by
<a href="http://www.fpcomplete.com/">FP Complete</a>
</div>
</div>
</div>
</div>
<script src="https://www.stackage.org/static/combined/KkkNZOBL.js"></script><script src="https://www.stackage.org/static/combined/bPfKWATx.js"></script><script>$(function(){
  hljs.initHighlightingOnLoad();

  $('.expanding').each(function(){
    var $this = $(this);
    if ($this.height() > 300) {
      $this.addClass('collapsed');
      $this.find('.bottom-gradient').click(function(){
        $this.removeClass('collapsed');
      });
    }
  });
});
</script></div><!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.  chromium.org/developers/how-tos/chrome-frame-getting-started --><!--[if lt IE 7 ]><script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script><script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script><![endif]--><script async src="https://www.googletagmanager.com/gtag/js?id=UA-36928035-2"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-36928035-2');</script></body></html>